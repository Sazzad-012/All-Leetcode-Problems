class Solution {
public:
    vector<string> vc;

    void dfs(TreeNode* root, string s) {
        if(!root -> left and !root -> right) {
            vc.push_back(s);
            return;
        }

        if(root -> left) {
            dfs(root -> left, s + "->" + to_string(root -> left -> val));
        }
        if(root -> right) {
            dfs(root -> right, s + "->" + to_string(root -> right -> val));
        }
    }

    vector<string> binaryTreePaths(TreeNode* root) {
        if(!root) return vc;

        dfs(root, to_string(root -> val));
        return vc;
    }
};
